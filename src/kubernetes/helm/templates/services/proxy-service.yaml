{{- if .Values.proxyService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.proxyService.replicas }}
  selector:
    matchLabels:
      app: proxy-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: proxy-service
    spec:
      containers:
      - name: proxy-service
        image: {{ .Values.proxyService.image.repository }}:{{ .Values.proxyService.image.tag }}
        imagePullPolicy: {{ .Values.proxyService.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.proxyService.service.targetPort }}
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: "/etc/kong/kong.yml"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:{{ .Values.proxyService.service.targetPort }}"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "auto"
        - name: KONG_PROXY_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        - name: KONG_LOG_LEVEL
          value: "info"
        envFrom:
          - configMapRef:
              name: cinemaabyss-config
          - secretRef:
              name: cinemaabyss-secrets
        resources:
          {{- toYaml .Values.proxyService.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: proxy-service
  ports:
    - port: {{ .Values.proxyService.service.port }}
      targetPort: {{ .Values.proxyService.service.targetPort }}
  type: {{ .Values.proxyService.service.type }}
{{- end }}